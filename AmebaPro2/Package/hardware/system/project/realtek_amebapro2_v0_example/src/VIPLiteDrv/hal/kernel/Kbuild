# License-Identifier: GPL-2.0
# Linux build file for viplite kernel space
#


MODULE_NAME ?= vipcore

EXTRA_CFLAGS += -Werror
EXTRA_CFLAGS += -I$(VIPLITE_ROOT)/hal/inc
EXTRA_CFLAGS += -I$(VIPLITE_ROOT)/hal/kernel
EXTRA_CFLAGS += -I$(VIPLITE_ROOT)/hal/kernel/linux
EXTRA_CFLAGS += -I$(VIPLITE_ROOT)/sdk/inc

OBJS := gc_vip_kernel.o \
        gc_vip_hardware.o \
        gc_vip_kernel_debug.o \
        gc_vip_kernel_heap.o \
        gc_vip_kernel_util.o \
        gc_vip_kernel_pm.o \
        gc_vip_video_memory.o \
        linux/gc_vip_kernel_drv.o \
        linux/gc_vip_kernel_os.o \
        linux/gc_vip_kernel_allocator.o \
        linux/gc_vip_kernel_os_debug.o

        
#platform
OBJS += linux/$(PLATFORM_CONFIG)/gc_vip_kernel_drv_platform.o
EXTRA_CFLAGS += -I$(VIPLITE_ROOT)/hal/kernel/linux/$(PLATFORM_CONFIG)
#Include platform config if exists.
-include $(VIPLITE_ROOT)/hal/kernel/linux/$(PLATFORM_CONFIG)/platform.mk

#NOTE:
#please configure CONFIG_DEBUG_INFO is not set if want to build vipcore.ko release version.

		
ifeq ($(KERNELRELEASE), )

.PHONY: all clean install

# Define targets.
ifeq ($(PLATFORM_CONFIG_IMX865), 1)
all:
	@$(MAKE) V=$(V) ARCH=$(ARCH_TYPE) -C $(KERNEL_DIR) M=`pwd` modules
else
all:
	@$(MAKE) V=$(V) ARCH=$(ARCH_TYPE) -C $(KERNEL_DIR) SUBDIRS=`pwd` modules
endif

clean:
	@rm -rf $(OBJS)
	@rm -rf modules.order Module.symvers .tmp_versions $(MODULE_NAME).mod.o $(MODULE_NAME).mod.c $(MODULE_NAME).ko $(MODULE_NAME).o
	@find $(VIPLITE_ROOT) -name ".gc_*.cmd" | xargs rm -f
	@find $(VIPLITE_ROOT) -name ".$(MODULE_NAME).*.cmd" | xargs rm -f
	@rm -f $(SDK_DIR)/drivers/$(MODULE_NAME).ko

install: all
	@mkdir -p $(SDK_DIR)/drivers
	@cp $(MODULE_NAME).ko $(SDK_DIR)/drivers

else


EXTRA_CFLAGS += -DLINUX -DDRIVER

ifeq ($(FLAREON),1)
EXTRA_CFLAGS += -DFLAREON
endif

ifeq ($(DEBUG), 1)
EXTRA_CFLAGS += -DDBG=1 -DDEBUG -D_DEBUG -DvpmdENABLE_DEBUG_LOG=4
else
EXTRA_CFLAGS += -DDBG=0
endif

ifeq ($(USE_LINUX_PCIE_DEVICE), 1)
EXTRA_CFLAGS += -DUSE_LINUX_PCIE_DEVICE
else ifeq ($(USE_LINUX_PLATFORM_DEVICE), 1)
EXTRA_CFLAGS += -DUSE_LINUX_PLATFORM_DEVICE
endif

ifeq ($(FPGA_BUILD), 1)
EXTRA_CFLAGS += -DFPGA_BUILD
endif

ifeq ($(USE_LINUX_RESERVE_MEM), 1)
EXTRA_CFLAGS += -DUSE_LINUX_RESERVE_MEM
endif

ifeq ($(USE_LINUX_CMA), 1)
EXTRA_CFLAGS += -DUSE_LINUX_CMA
endif

ifeq ($(USE_SECURE), 1)
EXTRA_CFLAGS += -DvpmdENABLE_SECURE=1
endif

obj-m = $(MODULE_NAME).o

$(MODULE_NAME)-objs  = $(OBJS)

endif

#only for checking driver build option
-include $(VIPLITE_ROOT)/hal/kernel/check.Kbuild
